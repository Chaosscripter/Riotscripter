--[[
 __     _____ ____ _____   _____  ___  
 \ \   / /_ _/ ___|_   _| |___ / / _ \ 
  \ \ / / | | |     | |     |_ \| | | |
   \ V /  | | |___  | |    ___) | |_| |
    \_/  |___\____| |_|   |____(_)___/ 
                                     BY RIOTSCRIPTER
]]
if UHFWUIFUW92988S8ASD88989298 then return end
repeat task.wait() getgenv().UHFWUIFUW92988S8ASD88989298 = true until game:IsLoaded()
do
	do

		STOP_ = false
		TEMP_TABLE = {}
		Config = { --//You can use this in command bar or edit through source
			blockrequests = false,
		}
		--
		OldHook,hookmetamethod,getnamecallmethod=nil,hookmetamethod,getnamecallmethod
		VICT = Instance.new("ScreenGui")
		GUI = Instance.new("Frame")
		UICorner = Instance.new("UICorner")
		UIStroke = Instance.new("UIStroke")
		Title = Instance.new("TextLabel")
		Close = Instance.new("TextButton")
		UIStroke_2 = Instance.new("UIStroke")
		UICorner_2 = Instance.new("UICorner")
		Outliner = Instance.new("Frame")
		UIStroke_3 = Instance.new("UIStroke")
		UICorner_3 = Instance.new("UICorner")
		OutputScroller = Instance.new("ScrollingFrame")
		UIListLayout = Instance.new("UIListLayout")
		Clear = Instance.new("TextButton")
		UIStroke_4 = Instance.new("UIStroke")
		UICorner_4 = Instance.new("UICorner")
		SaveToFile = Instance.new("TextButton")
		UIStroke_5 = Instance.new("UIStroke")
		UICorner_5 = Instance.new("UICorner")
		CommandInput = Instance.new("TextBox")
		UICorner_6 = Instance.new("UICorner")
		UIStroke_6 = Instance.new("UIStroke")
		ImageLabel = Instance.new("ImageLabel")
		TEMPLATE = Instance.new("TextBox")
		UIStroke_7 = Instance.new("UIStroke")
		UICorner_7 = Instance.new("UICorner")
		COPY = Instance.new("TextButton")
		UIStroke_8 = Instance.new("UIStroke")
		UICorner_8 = Instance.new("UICorner")
		BLOCK = Instance.new("TextButton")
		UIStroke_9 = Instance.new("UIStroke")
		UICorner_9 = Instance.new("UICorner")
	end

	VICT.Name = "VICT"
	VICT.Parent = (game:GetService("CoreGui") or gethui())
	VICT.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	GUI.Name = "GUI"
	GUI.Parent = VICT
	GUI.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	GUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
	GUI.BorderSizePixel = 0
	GUI.Position = UDim2.new(0.130149812, 0, 0.267166048, 0)
	GUI.Size = UDim2.new(0, 776, 0, 484)

	UICorner.Parent = GUI

	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.fromRGB(168, 168, 168)
	UIStroke.Thickness = 6.100
	UIStroke.Transparency = 0.300
	UIStroke.Parent = GUI

	Title.Name = "Title"
	Title.Parent = GUI
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0.0128865978, 0, 0, 0)
	Title.Size = UDim2.new(0, 195, 0, 20)
	Title.Font = Enum.Font.FredokaOne
	Title.Text = "VICT 3.0 BASE"
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextSize = 14.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	Close.Name = "Close"
	Close.Parent = GUI
	Close.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0.904639184, 0, 0.0206611566, 0)
	Close.Size = UDim2.new(0, 62, 0, 17)
	Close.Font = Enum.Font.FredokaOne
	Close.Text = "Close"
	Close.TextColor3 = Color3.fromRGB(255, 255, 255)
	Close.TextSize = 14.000

	UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_2.Color = Color3.fromRGB(168, 24, 5)
	UIStroke_2.Thickness = 6.100
	UIStroke_2.Transparency = 0.300
	UIStroke_2.Parent = Close

	UICorner_2.Parent = Close

	Outliner.Name = "Outliner"
	Outliner.Parent = GUI
	Outliner.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Outliner.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Outliner.BorderSizePixel = 0
	Outliner.Position = UDim2.new(0.0128865978, 0, 0.0826446265, 0)
	Outliner.Size = UDim2.new(0, 754, 0, 395)

	UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_3.Color = Color3.fromRGB(168, 168, 168)
	UIStroke_3.Thickness = 3.700
	UIStroke_3.Transparency = 0.300
	UIStroke_3.Parent = Outliner

	UICorner_3.Parent = Outliner

	OutputScroller.Name = "OutputScroller"
	OutputScroller.Parent = Outliner
	OutputScroller.Active = true
	OutputScroller.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	OutputScroller.BackgroundTransparency = 1.000
	OutputScroller.BorderColor3 = Color3.fromRGB(0, 0, 0)
	OutputScroller.BorderSizePixel = 0
	OutputScroller.Size = UDim2.new(0, 754, 0, 395)

	UIListLayout.Parent = OutputScroller
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 5)

	Clear.Name = "Clear"
	Clear.Parent = GUI
	Clear.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Clear.BorderSizePixel = 0
	Clear.Position = UDim2.new(0.12371134, 0, 0.938016534, 0)
	Clear.Size = UDim2.new(0, 62, 0, 17)
	Clear.Font = Enum.Font.FredokaOne
	Clear.Text = "Clear"
	Clear.TextColor3 = Color3.fromRGB(255, 255, 255)
	Clear.TextSize = 14.000

	UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_4.Color = Color3.fromRGB(247, 32, 8)
	UIStroke_4.Thickness = 6.100
	UIStroke_4.Transparency = 0.300
	UIStroke_4.Parent = Clear

	UICorner_4.Parent = Clear

	SaveToFile.Name = "SaveToFile"
	SaveToFile.Parent = GUI
	SaveToFile.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	SaveToFile.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SaveToFile.BorderSizePixel = 0
	SaveToFile.Position = UDim2.new(0.0128865978, 0, 0.938016534, 0)
	SaveToFile.Size = UDim2.new(0, 69, 0, 17)
	SaveToFile.Font = Enum.Font.FredokaOne
	SaveToFile.Text = "Save to file"
	SaveToFile.TextColor3 = Color3.fromRGB(255, 255, 255)
	SaveToFile.TextSize = 14.000

	UIStroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_5.Color = Color3.fromRGB(52, 195, 8)
	UIStroke_5.Thickness = 6.100
	UIStroke_5.Transparency = 0.300
	UIStroke_5.Parent = SaveToFile

	UICorner_5.Parent = SaveToFile

	CommandInput.Name = "CommandInput"
	CommandInput.Parent = GUI
	CommandInput.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	CommandInput.BorderColor3 = Color3.fromRGB(0, 0, 0)
	CommandInput.BorderSizePixel = 0
	CommandInput.Position = UDim2.new(0.238402069, 0, 0.929752052, 0)
	CommandInput.Size = UDim2.new(0, 247, 0, 25)
	CommandInput.Font = Enum.Font.FredokaOne
	CommandInput.PlaceholderColor3 = Color3.fromRGB(177, 177, 177)
	CommandInput.PlaceholderText = "Commands Here"
	CommandInput.Text = ""
	CommandInput.TextColor3 = Color3.fromRGB(255, 255, 255)
	CommandInput.TextSize = 14.000

	UICorner_6.Parent = CommandInput

	UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_6.Color = Color3.fromRGB(238, 238, 238)
	UIStroke_6.Thickness = 3.700
	UIStroke_6.Transparency = 0.300
	UIStroke_6.Parent = CommandInput

	ImageLabel.Parent = GUI
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.Position = UDim2.new(0.109536082, 0, 0.0826446265, 0)
	ImageLabel.Size = UDim2.new(0, 603, 0, 450)
	ImageLabel.Image = "rbxassetid://12712802208"
	ImageLabel.ImageColor3 = Color3.fromRGB(90, 90, 90)
	ImageLabel.ImageTransparency = 0.950

	TEMPLATE.Name = "TEMPLATE"
	TEMPLATE.Parent = VICT
	TEMPLATE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TEMPLATE.BackgroundTransparency = 1.000
	TEMPLATE.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TEMPLATE.BorderSizePixel = 0
	TEMPLATE.Position = UDim2.new(4.04742408e-08, 0, -0.00506329117, 0)
	TEMPLATE.Size = UDim2.new(0, 753, 0, 37)
	TEMPLATE.Visible = false
	TEMPLATE.ClearTextOnFocus = false
	TEMPLATE.Font = Enum.Font.SourceSans
	TEMPLATE.Text = "     LOG"
	TEMPLATE.TextColor3 = Color3.fromRGB(255, 255, 255)
	TEMPLATE.TextSize = 14.000
	TEMPLATE.TextXAlignment = Enum.TextXAlignment.Left

	UIStroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_7.Color = Color3.fromRGB(195, 195, 195)
	UIStroke_7.Thickness = 1.800
	UIStroke_7.Transparency = 0.750
	UIStroke_7.Parent = TEMPLATE

	UICorner_7.Parent = TEMPLATE

	COPY.Name = "COPY"
	COPY.Parent = TEMPLATE
	COPY.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	COPY.BorderColor3 = Color3.fromRGB(0, 0, 0)
	COPY.BorderSizePixel = 0
	COPY.Position = UDim2.new(0.918597102, 0, 0.235313624, 0)
	COPY.Size = UDim2.new(0, 48, 0, 17)
	COPY.Font = Enum.Font.FredokaOne
	COPY.Text = "COPY"
	COPY.TextColor3 = Color3.fromRGB(255, 255, 255)
	COPY.TextSize = 14.000

	UIStroke_8.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_8.Color = Color3.fromRGB(52, 195, 8)
	UIStroke_8.Thickness = 6.100
	UIStroke_8.Transparency = 0.300
	UIStroke_8.Parent = COPY

	UICorner_8.Parent = COPY

	BLOCK.Name = "BLOCK"
	BLOCK.Parent = TEMPLATE
	BLOCK.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	BLOCK.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BLOCK.BorderSizePixel = 0
	BLOCK.Position = UDim2.new(0.836259782, 0, 0.235313624, 0)
	BLOCK.Size = UDim2.new(0, 48, 0, 17)
	BLOCK.Font = Enum.Font.FredokaOne
	BLOCK.Text = "BLOCK"
	BLOCK.TextColor3 = Color3.fromRGB(255, 255, 255)
	BLOCK.TextSize = 14.000

	UIStroke_9.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_9.Color = Color3.fromRGB(216, 0, 0)
	UIStroke_9.Thickness = 6.100
	UIStroke_9.Transparency = 0.300
	UIStroke_9.Parent = BLOCK

	UICorner_9.Parent = BLOCK

	TEMP_TABLE.BlockedLinks = {}

	for i,v in pairs(VICT:GetDescendants()) do
		if v and v.Name ~= "BLOCK" and v.Name ~= "COPY" then
			v.Name = game:GetService("HttpService"):GenerateGUID(true)
		end
	end
	VICT.Name = game:GetService("HttpService"):GenerateGUID(true)
	local UIS = game:GetService("UserInputService")
	function dragify(Frame)
		local dragToggle = nil
		local dragSpeed = 0.15
		local dragInput = nil
		local dragStart = nil
		local Delta = nil
		local dragPos = nil
		local Position =nil
		local startPos = nil
		local function updateInput(input)
			Delta = input.Position - dragStart
			Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.15), {Position = Position}):Play()
		end
		Frame.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
				dragToggle = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragToggle = false
					end
				end)
			end
		end)
		Frame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if input == dragInput and dragToggle then
				updateInput(input)
			end
		end)
	end
	dragify(GUI)
end

--//GUI FUNCTION

Close.MouseButton1Up:Connect(function()
	VICT:Destroy()
	STOP_ = true
end)
Clear.MouseButton1Up:Connect(function()
	for i,v in pairs(OutputScroller:GetChildren()) do
		if v and v:IsA("TextBox") then
			v:Destroy()
		end
	end
end)
SaveToFile.MouseButton1Up:Connect(function()
	if not TEMP_TABLE.SaveFileCoolDown then
		TEMP_TABLE.SaveFileCoolDown = true
		SaveToFile.Text = "Saving.."
		local Converted = ""
		for i,v in pairs(OutputScroller:GetChildren()) do
			if v and v:IsA("TextBox") then
				Converted=Converted..v.Text.."\n ------- \n"
			end
		end
		writefile("VICTSAVE_"..tostring(math.random())..".txt",Converted)
		TEMP_TABLE.SaveFileCoolDown = nil
		wait(.7)
		SaveToFile.Text = "Saved!"
		wait(.7)
		SaveToFile.Text = "Save to file"
	end
end)
--//handling output

function OutputText(Text,Table)
	if STOP_ then return end
	local a = TEMPLATE:Clone()
	a.Text = (" "):rep(5)..Text..((Table and (" "):rep(3)..Table.Url) or "")
	a.TextEditable = false
	a.Visible = true
	a.Parent = OutputScroller
	if not Table then a:FindFirstChild("BLOCK"):Destroy() a:FindFirstChild("COPY"):Destroy() end
	if Table then
		a:FindFirstChild("BLOCK").MouseButton1Up:Connect(function()
			TEMP_TABLE.BlockedLinks[#TEMP_TABLE.BlockedLinks+1]=tostring(Table.Url)
			a:FindFirstChild("BLOCK").Text = "Blocked"
		end)
		a:FindFirstChild("COPY").MouseButton1Up:Connect(function()
			if Table then
				(setclipboard or toclipboard)(tostring(Table.Url))
				a:FindFirstChild("COPY").Text = "Copied"
				wait(1)
				a:FindFirstChild("COPY").Text = "Copy"
			end
		end)
	end
end
function dump(tableData, indent)
	indent = indent or 0
	local function serializeValue(value, level)
		level = level or 0
		if type(value) == "string" then
			return string.format("%q", value)
		elseif type(value) == "table" then
			return dump(value, level + 1)
		else
			return tostring(value)
		end
	end
	local result = "{\n"
	for k, v in pairs(tableData) do
		local keyIndent = string.rep(" ", indent + 2)
		local valueIndent = string.rep(" ", indent + 4)
		if type(k) == "string" then
			result = result..keyIndent.."["..string.format("%q", k).."] = "
		else
			result = result..keyIndent.."["..tostring(k).."] = "
		end
		result = result..serializeValue(v, indent + 2)..",\n"
	end
	result = result..string.rep(" ", indent).."}"
	return result
end
-----///////////MAIN
Needed_Functions = {
	hook = clonefunction(hookfunction),
	ProtectedFunctions = {
		(http_request),
		(request),
	},
	Capture_On = {
		(http_request),
		(request),
	},
}

local Oldislclosure = islclosure
Oldislclosure = Needed_Functions.hook(islclosure,function(a)
	if a and table.find(Needed_Functions.ProtectedFunctions,a) and Oldislclosure(a) == true then
		return false
	end
	return Oldislclosure(a)
end)
local OldGc = getgc
local Blacklisted = {}
for i,v in pairs(getgc()) do
	if v and typeof(v):lower() == "function" and islclosure(v) then
		local Constants = debug.getconstants(v)
		for _,a in pairs(Constants) do
			if a and typeof(a):lower() =="string" and a:lower() == "vict" and debug.getinfo(v).currentline <3 then
				Blacklisted[#Blacklisted+1]=v
			end
		end
	end
end
OldGc = Needed_Functions.hook(getgc,function()
	local EditedTable = OldGc()
	for i,v in pairs(EditedTable) do
		if v and table.find(Blacklisted,v) then
			EditedTable[i]=nil
		end
	end
	return EditedTable
end)
for i,v in pairs(Needed_Functions.Capture_On) do
	if v then
		local Number = i+math.random(50,400) --//So it doesnt mess with things in the table
		TEMP_TABLE[Number]=nil
		TEMP_TABLE[Number] = Needed_Functions.hook(v,function(...)
			local Info = {...}
			task.spawn(function()
				if Info[1].Url then
					OutputText("REQUEST: ",{
						Url = tostring(Info[1].Url),
					})
				end
			end)
			if Config.BlockRequests then
				wait(Random.new():NextNumber(.4,1))
				OutputText("Request has been blocked from reaching its target.")
				return {["StatusMessage"] = "", 
					["Success"] = true, 
					["StatusCode"] = 200, 
					["Body"] = "",
					["Cookies"] = {}, 
					["Headers"] = {}, 
				} 
			end
			return TEMP_TABLE[Number](...)
		end)
	end
end

local ToHook = {--//don't ask why
	["HttpGet"]="HttpGet",
	["HttpPost"]="HttpPost",
	["HttpGetAsync"]="HttpGetAsync",
	["HttpPostAsync"]="HttpPostAsync",
	["GetObjects"] ="GetObjects" ,
}
local Hooked = {}

for i,v in pairs(ToHook) do
	Hooked[i] = Needed_Functions.hook(game[i],function(Link,...)
		local Info = {...}
		OutputText(i..": ",{Url=Info[1]})
		if table.find(TEMP_TABLE.BlockedLinks,Link) then
			OutputText("Link has been blocked.")
			return wait(.5)
		end
		return Hooked[i](Link,...)
	end)
end

OldHook = hookmetamethod(game, "__namecall", function(self, ...)
	local Got  = getnamecallmethod()
	local Info = {...}
	if table.find(ToHook,Got) then
		task.spawn(function()
			OutputText("HTTPGET: ",{Url=tostring(Info[1])})
		end)
	end
	if Got == "GetObjects" then
		OutputText("GETOBJECTS: ",{
			Url = dump(Info)
		})
	end
	return OldHook(self, ...)
end)
function InputCommandBar(Text)
	local First = Text:split(" ")[1]
	local Second = Text:split(" ")[2]
	if not First then return end
	if not Second then Second = "" else Second =Second:lower() end
	if First:lower() == "blockrequest" or First:lower() == "blockrequests" then
		if Second == "on" then
			OutputText("All requests will be blocked")
			Config.blockrequests = true
		elseif Second == "off" then
			OutputText("All requests will not be blocked")
			Config.blockrequests = false
		end
	end
	if First == "cmds" then
		local Cmds = {
			"Cmds - view all commands",
			"blockrequests on/off  -  blocks all requests",
		}
		for i,v in pairs(Cmds) do
			if v then
				OutputText(v)
			end
		end
	end
end
CommandInput.FocusLost:Connect(function(a)
	if a then
		local Saved = CommandInput.Text
		task.spawn(function()
			InputCommandBar(Saved)
		end)
		wait(.05)
		CommandInput.Text = ""
	end
end)
